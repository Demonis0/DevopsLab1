def backendImage = ''
def frontendImage = ''

pipeline {
    agent {
        label 'agent'
    }

    stages {
        stage('Cloning Git') {
            steps {
                git branch: 'main', credentialsId: 'd1deecb1-8113-4e95-bce7-e8360dd3116e', url: 'https://github.com/ST2DCE/2024-2025.git'
            }
        }
        
        stage('Building backend image') {
            steps {
                script {
                    dir('TP-1/backend') {
                        backendImage = docker.build("efrei2023/backend:1")
                    }
                }
            }
        }

        stage('Publish backend Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'e8de9ac4-fc45-44a3-afb9-a4f53e42dc6f') {
                        backendImage.push()
                    }
                }
            }
        }
        
        stage('Building frontend image') {
            steps {
                script {
                    dir('TP-1/frontend') {
                        frontendImage = docker.build("efrei2023/frontend:1")
                    }
                }
            }
        }
        
        stage('Publish frontend Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'e8de9ac4-fc45-44a3-afb9-a4f53e42dc6f') {
                        frontendImage.push()
                    }
                }
            }
        }
        
        stage('Deploy backend container') {
            steps {
                sh '''
                docker stop backend || true;
                docker rm backend || true;
                docker run -d --net=efrei -e POSTGRES_PASSWORD=postgres --name backend efrei2023/backend:1
                '''
            }
        }
        
        stage('Deploy frontend container') {
            steps {
                sh '''
                docker stop frontend || true;
                docker rm frontend || true;
                docker run -d --net=efrei -p 8081:80 -e POSTGRES_PASSWORD=postgres --name frontend efrei2023/frontend:1
                '''
            }
        }
        
        stage('Modify Database in Backend Container') {
            steps {
                script {
                    sh '''
                    docker exec backend psql -h localhost -p 5432 -U postgres -d postgres -c "DELETE FROM book;"
                    docker exec backend psql -h localhost -p 5432 -U postgres -d postgres -c "INSERT INTO book (title) VALUES ('Nathan DELORME'), ('Mattis DESVILLES'), ('Frédéric CASIER'), ('Matthieu JACQUES'), ('Julien DE LAHARPE');"
                    '''
                }
            }
        }
    }
}